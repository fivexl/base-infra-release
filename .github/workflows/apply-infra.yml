name: 'Apply Infra Updates'

on:
  push:
    branches:
      - master
  schedule:
    - cron: "5 0 * * 0"

defaults:
  run:
    working-directory: deployment/terraform/

jobs:
  tflint:
    name: TFLint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: TFLint
        run: |
          curl https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint

  fmt:
    name: fmt
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@v2
      - run: terraform fmt --recursive -check=true

  validate:
    name: validate
    runs-on: ubuntu-20.04
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@v2
      - name: terraform validate
        run: |
          terraform init
          terraform validate -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: "eu-central-1"

  apply:
    name: apply
    needs: [tflint, fmt, validate]
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: deployment/terraform/
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: "eu-central-1"

    # Checkout the repository to the GitHub Actions runner
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # 2020-10-12 python 3.9 not yet compatible
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: terraform init

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out plan.tfplan

      # Apply an execution plan with Terraform
      - name: Terraform Apply
        id: apply
        run: |
          ls -la plan.tfplan
          terraform apply -auto-approve plan.tfplan
